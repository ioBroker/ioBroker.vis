# This is a composition of lint and test scripts
# Make sure to update this file along with the others

name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
  push:
    branches:
      - '*'
    tags:
      # normal versions
      - "v?[0-9]+.[0-9]+.[0-9]+"
      # pre-releases
      - "v?[0-9]+.[0-9]+.[0-9]+-**"
  pull_request: {}

# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Performs quick checks before the expensive test runs
#  check-and-lint:
#    if: contains(github.event.head_commit.message, '[skip ci]') == false
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Use Node.js 16.x
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16.x
#
#      - name: Install Dependencies
#        run: npm install

  # Runs adapter tests on all supported node versions and OSes
#  adapter-tests:
#    if: contains(github.event.head_commit.message, '[skip ci]') == false
#
#    needs: [check-and-lint]
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Use Node.js 16.x
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16.x
#
#      - name: Install Dependencies
#        run: npm install --ignore-scripts
#
#      - name: Run local tests
#        run: npm test

  adapter-tests-gui:
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    #    needs: [adapter-tests]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: npm i

      - name: Build
        run: npm run build

      - name: Run local tests
        run: npm run test-gui

      - name: Archive screenshots
        if: always()
        # if: failure()
        uses: actions/upload-artifact@v3
        with:
          path: tmp/screenshots/**/*.png
          retention-days: 3

  # Deploys the final package to NPM
  deploy:
    needs: [adapter-tests-gui]

    # Trigger this step only when a commit on master is tagged with a version number
    if: |
      contains(github.event.head_commit.message, '[skip ci]') == false &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Extract the version and commit body from the tag
        id: extract_release
        # The body may be multiline, therefore we need to escape some characters
        run: |
          VERSION="${{ github.ref }}"
          VERSION=${VERSION##*/}
          VERSION=${VERSION##*v}
          echo "::set-output name=VERSION::$VERSION"
          BODY=$(git show -s --format=%b)
          BODY="${BODY//'%'/'%25'}"
          BODY="${BODY//$'\n'/'%0A'}"
          BODY="${BODY//$'\r'/'%0D'}"
          echo "::set-output name=BODY::$BODY"

      - name: Install Dependencies
        run: npm install --ignore-scripts

      - name: Create a clean build
        run: npm run build
      - name: Publish package to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm whoami
          npm publish

      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.extract_release.outputs.VERSION }}
          draft: false
          # Prerelease versions create pre-releases on GitHub
          prerelease: ${{ contains(steps.extract_release.outputs.VERSION, '-') }}
          body: ${{ steps.extract_release.outputs.BODY }}

      - name: Notify Sentry.io about the release
        run: |
          npm i -g @sentry/cli
          export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          export SENTRY_URL=https://sentry.iobroker.net
          export SENTRY_ORG=iobroker
          export SENTRY_PROJECT=iobroker-vis
          export SENTRY_VERSION=iobroker.vis@${{ env.VERSION }}
          sentry-cli releases new $SENTRY_VERSION
          sentry-cli releases finalize $SENTRY_VERSION

        # Add the following line BEFORE finalize if repositories are connected in Sentry
        # sentry-cli releases set-commits $SENTRY_VERSION --auto

        # Add the following line BEFORE finalize if sourcemap uploads are needed
        # sentry-cli releases files $SENTRY_VERSION upload-sourcemaps build/
